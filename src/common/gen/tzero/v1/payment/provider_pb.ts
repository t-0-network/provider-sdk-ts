// @generated by protoc-gen-es v2.6.2 with parameter "target=ts,import_extension=js"
// @generated from file tzero/v1/payment/provider.proto (package tzero.v1.payment, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { PaymentMethod } from "../common/payment_method_pb.js";
import { file_tzero_v1_common_payment_method } from "../common/payment_method_pb.js";
import type { Decimal } from "../common/common_pb.js";
import { file_tzero_v1_common_common } from "../common/common_pb.js";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tzero/v1/payment/provider.proto.
 */
export const file_tzero_v1_payment_provider: GenFile = /*@__PURE__*/
  fileDesc("Ch90emVyby92MS9wYXltZW50L3Byb3ZpZGVyLnByb3RvEhB0emVyby52MS5wYXltZW50IrcNChpBcHBlbmRMZWRnZXJFbnRyaWVzUmVxdWVzdBJOCgx0cmFuc2FjdGlvbnMYFCADKAsyOC50emVyby52MS5wYXltZW50LkFwcGVuZExlZGdlckVudHJpZXNSZXF1ZXN0LlRyYW5zYWN0aW9uGs4HCgtUcmFuc2FjdGlvbhIWCg50cmFuc2FjdGlvbl9pZBgKIAEoBBJJCgdlbnRyaWVzGB4gAygLMjgudHplcm8udjEucGF5bWVudC5BcHBlbmRMZWRnZXJFbnRyaWVzUmVxdWVzdC5MZWRnZXJFbnRyeRJQCgZwYXlfaW4YbiABKAsyPi50emVyby52MS5wYXltZW50LkFwcGVuZExlZGdlckVudHJpZXNSZXF1ZXN0LlRyYW5zYWN0aW9uLlBheUluSAASaAoScGF5b3V0X3Jlc2VydmF0aW9uGHggASgLMkoudHplcm8udjEucGF5bWVudC5BcHBlbmRMZWRnZXJFbnRyaWVzUmVxdWVzdC5UcmFuc2FjdGlvbi5QYXlvdXRSZXNlcnZhdGlvbkgAElIKBnBheW91dBiCASABKAsyPy50emVyby52MS5wYXltZW50LkFwcGVuZExlZGdlckVudHJpZXNSZXF1ZXN0LlRyYW5zYWN0aW9uLlBheW91dEgAEmsKE3Byb3ZpZGVyX3NldHRsZW1lbnQYjAEgASgLMksudHplcm8udjEucGF5bWVudC5BcHBlbmRMZWRnZXJFbnRyaWVzUmVxdWVzdC5UcmFuc2FjdGlvbi5Qcm92aWRlclNldHRsZW1lbnRIABJhCg5mZWVfc2V0dGxlbWVudBiWASABKAsyRi50emVyby52MS5wYXltZW50LkFwcGVuZExlZGdlckVudHJpZXNSZXF1ZXN0LlRyYW5zYWN0aW9uLkZlZVNldHRsZW1lbnRIABJ4ChpwYXlvdXRfcmVzZXJ2YXRpb25fcmVsZWFzZRigASABKAsyUS50emVyby52MS5wYXltZW50LkFwcGVuZExlZGdlckVudHJpZXNSZXF1ZXN0LlRyYW5zYWN0aW9uLlBheW91dFJlc2VydmF0aW9uUmVsZWFzZUgAGhsKBVBheUluEhIKCnBheW1lbnRfaWQYCiABKAQaJwoRUGF5b3V0UmVzZXJ2YXRpb24SEgoKcGF5bWVudF9pZBgKIAEoBBocCgZQYXlvdXQSEgoKcGF5bWVudF9pZBgKIAEoBBorChJQcm92aWRlclNldHRsZW1lbnQSFQoNc2V0dGxlbWVudF9pZBgKIAEoBBoqCg1GZWVTZXR0bGVtZW50EhkKEWZlZV9zZXR0bGVtZW50X2lkGAogASgEGi4KGFBheW91dFJlc2VydmF0aW9uUmVsZWFzZRISCgpwYXltZW50X2lkGAogASgEQhUKE3RyYW5zYWN0aW9uX2RldGFpbHMajQIKC0xlZGdlckVudHJ5EhgKEGFjY291bnRfb3duZXJfaWQYCiABKA0STgoMYWNjb3VudF90eXBlGBQgASgOMjgudHplcm8udjEucGF5bWVudC5BcHBlbmRMZWRnZXJFbnRyaWVzUmVxdWVzdC5BY2NvdW50VHlwZRIQCghjdXJyZW5jeRgeIAEoCRInCgVkZWJpdBgoIAEoCzIYLnR6ZXJvLnYxLmNvbW1vbi5EZWNpbWFsEigKBmNyZWRpdBgyIAEoCzIYLnR6ZXJvLnYxLmNvbW1vbi5EZWNpbWFsEi8KDWV4Y2hhbmdlX3JhdGUYPCABKAsyGC50emVyby52MS5jb21tb24uRGVjaW1hbCLnAgoLQWNjb3VudFR5cGUSHAoYQUNDT1VOVF9UWVBFX1VOU1BFQ0lGSUVEEAASHQoZQUNDT1VOVF9UWVBFX1VTRVJfUEFZQUJMRRABEhUKEUFDQ09VTlRfVFlQRV9DQVNIEAISGAoUQUNDT1VOVF9UWVBFX1JFU0VSVkUQAxIeChpBQ0NPVU5UX1RZUEVfUkVTRVJWRV9VU0FHRRAEEiEKHUFDQ09VTlRfVFlQRV9QUk9WSURFUl9QQVlBQkxFEAUSJAogQUNDT1VOVF9UWVBFX1BST1ZJREVSX1JFQ0VJVkFCTEUQBhIcChhBQ0NPVU5UX1RZUEVfRkVFX1BBWUFCTEUQBxIfChtBQ0NPVU5UX1RZUEVfRkVFX1JFQ0VJVkFCTEUQCBIcChhBQ0NPVU5UX1RZUEVfRkVFX0VYUEVOU0UQCRIkCiBBQ0NPVU5UX1RZUEVfUFJPVklERVJfU0VUVExFTUVOVBAKIh0KG0FwcGVuZExlZGdlckVudHJpZXNSZXNwb25zZSKbAgoNUGF5b3V0UmVxdWVzdBISCgpwYXltZW50X2lkGAogASgDEhEKCXBheW91dF9pZBgUIAEoAxIQCghjdXJyZW5jeRgeIAEoCRIXCg9jbGllbnRfcXVvdGVfaWQYKCABKAkSKAoGYW1vdW50GDIgASgLMhgudHplcm8udjEuY29tbW9uLkRlY2ltYWwSOgoNcGF5b3V0X21ldGhvZBg8IAEoCzIeLnR6ZXJvLnYxLmNvbW1vbi5QYXltZW50TWV0aG9kSACIAQESFgoJcmVmZXJlbmNlGEYgASgJSAGIAQESGgoScGF5X2luX3Byb3ZpZGVyX2lkGFAgASgNQhAKDl9wYXlvdXRfbWV0aG9kQgwKCl9yZWZlcmVuY2UiEAoOUGF5b3V0UmVzcG9uc2Ui7wIKFFVwZGF0ZVBheW1lbnRSZXF1ZXN0EhIKCnBheW1lbnRfaWQYBSABKAQSGQoRcGF5bWVudF9jbGllbnRfaWQYCiABKAkSQQoHc3VjY2VzcxgUIAEoCzIuLnR6ZXJvLnYxLnBheW1lbnQuVXBkYXRlUGF5bWVudFJlcXVlc3QuU3VjY2Vzc0gAEkEKB2ZhaWx1cmUYHiABKAsyLi50emVyby52MS5wYXltZW50LlVwZGF0ZVBheW1lbnRSZXF1ZXN0LkZhaWx1cmVIABprCgdTdWNjZXNzEi8KDXBheW91dF9hbW91bnQYCiABKAsyGC50emVyby52MS5jb21tb24uRGVjaW1hbBIvCgtwYWlkX291dF9hdBgyIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAaKwoHRmFpbHVyZSIgCgZSZWFzb24SFgoSUkVBU09OX1VOU1BFQ0lGSUVEEABCCAoGcmVzdWx0IhcKFVVwZGF0ZVBheW1lbnRSZXNwb25zZSKQAgoSVXBkYXRlTGltaXRSZXF1ZXN0EjoKBmxpbWl0cxgKIAMoCzIqLnR6ZXJvLnYxLnBheW1lbnQuVXBkYXRlTGltaXRSZXF1ZXN0LkxpbWl0Gr0BCgVMaW1pdBIPCgd2ZXJzaW9uGAogASgDEhMKC2NyZWRpdG9yX2lkGA8gASgFEi4KDHBheW91dF9saW1pdBgUIAEoCzIYLnR6ZXJvLnYxLmNvbW1vbi5EZWNpbWFsEi4KDGNyZWRpdF9saW1pdBgeIAEoCzIYLnR6ZXJvLnYxLmNvbW1vbi5EZWNpbWFsEi4KDGNyZWRpdF91c2FnZRgoIAEoCzIYLnR6ZXJvLnYxLmNvbW1vbi5EZWNpbWFsIhUKE1VwZGF0ZUxpbWl0UmVzcG9uc2UypAMKD1Byb3ZpZGVyU2VydmljZRJQCgZQYXlPdXQSHy50emVyby52MS5wYXltZW50LlBheW91dFJlcXVlc3QaIC50emVyby52MS5wYXltZW50LlBheW91dFJlc3BvbnNlIgOQAgISZQoNVXBkYXRlUGF5bWVudBImLnR6ZXJvLnYxLnBheW1lbnQuVXBkYXRlUGF5bWVudFJlcXVlc3QaJy50emVyby52MS5wYXltZW50LlVwZGF0ZVBheW1lbnRSZXNwb25zZSIDkAICEl8KC1VwZGF0ZUxpbWl0EiQudHplcm8udjEucGF5bWVudC5VcGRhdGVMaW1pdFJlcXVlc3QaJS50emVyby52MS5wYXltZW50LlVwZGF0ZUxpbWl0UmVzcG9uc2UiA5ACAhJ3ChNBcHBlbmRMZWRnZXJFbnRyaWVzEiwudHplcm8udjEucGF5bWVudC5BcHBlbmRMZWRnZXJFbnRyaWVzUmVxdWVzdBotLnR6ZXJvLnYxLnBheW1lbnQuQXBwZW5kTGVkZ2VyRW50cmllc1Jlc3BvbnNlIgOQAgJChwEKFGNvbS50emVyby52MS5wYXltZW50Qg1Qcm92aWRlclByb3RvUAGiAgNUVlCqAhBUemVyby5WMS5QYXltZW50ygIQVHplcm9cVjFcUGF5bWVudOICHFR6ZXJvXFYxXFBheW1lbnRcR1BCTWV0YWRhdGHqAhJUemVybzo6VjE6OlBheW1lbnRiBnByb3RvMw", [file_tzero_v1_common_payment_method, file_tzero_v1_common_common, file_google_protobuf_timestamp]);

/**
 * @generated from message tzero.v1.payment.AppendLedgerEntriesRequest
 */
export type AppendLedgerEntriesRequest = Message<"tzero.v1.payment.AppendLedgerEntriesRequest"> & {
  /**
   * *
   * This is a list of transactions that were appended to the ledger of the provider.
   * The transaction_id should be used to identify the transaction and ensure that it is processed only once.
   *
   * @generated from field: repeated tzero.v1.payment.AppendLedgerEntriesRequest.Transaction transactions = 20;
   */
  transactions: AppendLedgerEntriesRequest_Transaction[];
};

/**
 * Describes the message tzero.v1.payment.AppendLedgerEntriesRequest.
 * Use `create(AppendLedgerEntriesRequestSchema)` to create a new message.
 */
export const AppendLedgerEntriesRequestSchema: GenMessage<AppendLedgerEntriesRequest> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 0);

/**
 * @generated from message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction
 */
export type AppendLedgerEntriesRequest_Transaction = Message<"tzero.v1.payment.AppendLedgerEntriesRequest.Transaction"> & {
  /**
   * *
   * transaction_id is an incrementally growing identifier for the transaction.
   * It could have gaps and could be out of order, but it is unique for each transaction.
   *
   * @generated from field: uint64 transaction_id = 10;
   */
  transactionId: bigint;

  /**
   * *
   * entries is a list of ledger entries that were appended to the ledger of the provider.
   * Each entry represents a financial event that occurred in the provider's accounts.
   *
   * @generated from field: repeated tzero.v1.payment.AppendLedgerEntriesRequest.LedgerEntry entries = 30;
   */
  entries: AppendLedgerEntriesRequest_LedgerEntry[];

  /**
   * *
   * transaction_details is a oneof field that contains details about the transaction.
   * It can be one of the following: PayIn, PayoutReservation, Payout, ProviderSettlement, FeeSettlement, PayoutReservationRelease.
   *
   * @generated from oneof tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.transaction_details
   */
  transactionDetails: {
    /**
     * @generated from field: tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.PayIn pay_in = 110;
     */
    value: AppendLedgerEntriesRequest_Transaction_PayIn;
    case: "payIn";
  } | {
    /**
     * @generated from field: tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.PayoutReservation payout_reservation = 120;
     */
    value: AppendLedgerEntriesRequest_Transaction_PayoutReservation;
    case: "payoutReservation";
  } | {
    /**
     * @generated from field: tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.Payout payout = 130;
     */
    value: AppendLedgerEntriesRequest_Transaction_Payout;
    case: "payout";
  } | {
    /**
     * @generated from field: tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.ProviderSettlement provider_settlement = 140;
     */
    value: AppendLedgerEntriesRequest_Transaction_ProviderSettlement;
    case: "providerSettlement";
  } | {
    /**
     * @generated from field: tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.FeeSettlement fee_settlement = 150;
     */
    value: AppendLedgerEntriesRequest_Transaction_FeeSettlement;
    case: "feeSettlement";
  } | {
    /**
     * @generated from field: tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.PayoutReservationRelease payout_reservation_release = 160;
     */
    value: AppendLedgerEntriesRequest_Transaction_PayoutReservationRelease;
    case: "payoutReservationRelease";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.
 * Use `create(AppendLedgerEntriesRequest_TransactionSchema)` to create a new message.
 */
export const AppendLedgerEntriesRequest_TransactionSchema: GenMessage<AppendLedgerEntriesRequest_Transaction> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 0, 0);

/**
 * @generated from message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.PayIn
 */
export type AppendLedgerEntriesRequest_Transaction_PayIn = Message<"tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.PayIn"> & {
  /**
   * @generated from field: uint64 payment_id = 10;
   */
  paymentId: bigint;
};

/**
 * Describes the message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.PayIn.
 * Use `create(AppendLedgerEntriesRequest_Transaction_PayInSchema)` to create a new message.
 */
export const AppendLedgerEntriesRequest_Transaction_PayInSchema: GenMessage<AppendLedgerEntriesRequest_Transaction_PayIn> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 0, 0, 0);

/**
 * @generated from message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.PayoutReservation
 */
export type AppendLedgerEntriesRequest_Transaction_PayoutReservation = Message<"tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.PayoutReservation"> & {
  /**
   * @generated from field: uint64 payment_id = 10;
   */
  paymentId: bigint;
};

/**
 * Describes the message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.PayoutReservation.
 * Use `create(AppendLedgerEntriesRequest_Transaction_PayoutReservationSchema)` to create a new message.
 */
export const AppendLedgerEntriesRequest_Transaction_PayoutReservationSchema: GenMessage<AppendLedgerEntriesRequest_Transaction_PayoutReservation> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 0, 0, 1);

/**
 * @generated from message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.Payout
 */
export type AppendLedgerEntriesRequest_Transaction_Payout = Message<"tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.Payout"> & {
  /**
   * @generated from field: uint64 payment_id = 10;
   */
  paymentId: bigint;
};

/**
 * Describes the message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.Payout.
 * Use `create(AppendLedgerEntriesRequest_Transaction_PayoutSchema)` to create a new message.
 */
export const AppendLedgerEntriesRequest_Transaction_PayoutSchema: GenMessage<AppendLedgerEntriesRequest_Transaction_Payout> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 0, 0, 2);

/**
 * @generated from message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.ProviderSettlement
 */
export type AppendLedgerEntriesRequest_Transaction_ProviderSettlement = Message<"tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.ProviderSettlement"> & {
  /**
   * @generated from field: uint64 settlement_id = 10;
   */
  settlementId: bigint;
};

/**
 * Describes the message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.ProviderSettlement.
 * Use `create(AppendLedgerEntriesRequest_Transaction_ProviderSettlementSchema)` to create a new message.
 */
export const AppendLedgerEntriesRequest_Transaction_ProviderSettlementSchema: GenMessage<AppendLedgerEntriesRequest_Transaction_ProviderSettlement> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 0, 0, 3);

/**
 * @generated from message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.FeeSettlement
 */
export type AppendLedgerEntriesRequest_Transaction_FeeSettlement = Message<"tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.FeeSettlement"> & {
  /**
   * @generated from field: uint64 fee_settlement_id = 10;
   */
  feeSettlementId: bigint;
};

/**
 * Describes the message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.FeeSettlement.
 * Use `create(AppendLedgerEntriesRequest_Transaction_FeeSettlementSchema)` to create a new message.
 */
export const AppendLedgerEntriesRequest_Transaction_FeeSettlementSchema: GenMessage<AppendLedgerEntriesRequest_Transaction_FeeSettlement> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 0, 0, 4);

/**
 * @generated from message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.PayoutReservationRelease
 */
export type AppendLedgerEntriesRequest_Transaction_PayoutReservationRelease = Message<"tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.PayoutReservationRelease"> & {
  /**
   * @generated from field: uint64 payment_id = 10;
   */
  paymentId: bigint;
};

/**
 * Describes the message tzero.v1.payment.AppendLedgerEntriesRequest.Transaction.PayoutReservationRelease.
 * Use `create(AppendLedgerEntriesRequest_Transaction_PayoutReservationReleaseSchema)` to create a new message.
 */
export const AppendLedgerEntriesRequest_Transaction_PayoutReservationReleaseSchema: GenMessage<AppendLedgerEntriesRequest_Transaction_PayoutReservationRelease> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 0, 0, 5);

/**
 * @generated from message tzero.v1.payment.AppendLedgerEntriesRequest.LedgerEntry
 */
export type AppendLedgerEntriesRequest_LedgerEntry = Message<"tzero.v1.payment.AppendLedgerEntriesRequest.LedgerEntry"> & {
  /**
   * 1 is network account, others are ids of participants 
   *
   * @generated from field: uint32 account_owner_id = 10;
   */
  accountOwnerId: number;

  /**
   * *
   * account_type is the type of the account that the entry belongs to.
   * It is used to categorize the entries and understand the nature of the financial event.
   *
   * @generated from field: tzero.v1.payment.AppendLedgerEntriesRequest.AccountType account_type = 20;
   */
  accountType: AppendLedgerEntriesRequest_AccountType;

  /**
   * *
   * It is the currency of the entry. If the transaction contains entries with multiple currencies, the exchange_rate
   * field should be provided to be used to convert the amounts to USD.
   *
   * @generated from field: string currency = 30;
   */
  currency: string;

  /**
   * *
   * debit is the amount that was debited from the account.
   * If the entry is a credit, this field should be 0.
   *
   * @generated from field: tzero.v1.common.Decimal debit = 40;
   */
  debit?: Decimal;

  /**
   * *
   * credit is the amount that was credited to the account.
   * If the entry is a debit, this field should be 0.
   *
   * @generated from field: tzero.v1.common.Decimal credit = 50;
   */
  credit?: Decimal;

  /**
   * *
   * exchange_rate is the exchange rate of the currency to USD if the currency is not USD and the transaction contains
   * entries with multiple currencies. Exchange rate for the base currency USD and the quote currency provided in the entry.
   *
   * @generated from field: tzero.v1.common.Decimal exchange_rate = 60;
   */
  exchangeRate?: Decimal;
};

/**
 * Describes the message tzero.v1.payment.AppendLedgerEntriesRequest.LedgerEntry.
 * Use `create(AppendLedgerEntriesRequest_LedgerEntrySchema)` to create a new message.
 */
export const AppendLedgerEntriesRequest_LedgerEntrySchema: GenMessage<AppendLedgerEntriesRequest_LedgerEntry> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 0, 1);

/**
 * @generated from enum tzero.v1.payment.AppendLedgerEntriesRequest.AccountType
 */
export enum AppendLedgerEntriesRequest_AccountType {
  /**
   * @generated from enum value: ACCOUNT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Reflects the user's payable balance, the amount that the provider owes to the user.
   *
   * @generated from enum value: ACCOUNT_TYPE_USER_PAYABLE = 1;
   */
  USER_PAYABLE = 1,

  /**
   * Reflects the cash balance of the provider.
   *
   * @generated from enum value: ACCOUNT_TYPE_CASH = 2;
   */
  CASH = 2,

  /**
   * This is the reserve account of the provider, which reflects the reserve of balance to reduce the limit available from one provider to another.
   *
   * @generated from enum value: ACCOUNT_TYPE_RESERVE = 3;
   */
  RESERVE = 3,

  /**
   * This is the mirror account for the reserve. To keep the double entry accounting principle.
   *
   * @generated from enum value: ACCOUNT_TYPE_RESERVE_USAGE = 4;
   */
  RESERVE_USAGE = 4,

  /**
   * Reflects how much the provider owes to the network or other participants.
   *
   * @generated from enum value: ACCOUNT_TYPE_PROVIDER_PAYABLE = 5;
   */
  PROVIDER_PAYABLE = 5,

  /**
   * Reflects how much the provider is owed by the network or other participants.
   *
   * @generated from enum value: ACCOUNT_TYPE_PROVIDER_RECEIVABLE = 6;
   */
  PROVIDER_RECEIVABLE = 6,

  /**
   * Reflects the fees that the provider owes to the network.
   *
   * @generated from enum value: ACCOUNT_TYPE_FEE_PAYABLE = 7;
   */
  FEE_PAYABLE = 7,

  /**
   * Reflects the fees that the network is owed by the provider.
   *
   * @generated from enum value: ACCOUNT_TYPE_FEE_RECEIVABLE = 8;
   */
  FEE_RECEIVABLE = 8,

  /**
   * Reflects the fees that the provider has to pay for the services provided by the network.
   *
   * @generated from enum value: ACCOUNT_TYPE_FEE_EXPENSE = 9;
   */
  FEE_EXPENSE = 9,

  /**
   * Reflects the settlement balance of the provider with the network or other participants.
   *
   * @generated from enum value: ACCOUNT_TYPE_PROVIDER_SETTLEMENT = 10;
   */
  PROVIDER_SETTLEMENT = 10,
}

/**
 * Describes the enum tzero.v1.payment.AppendLedgerEntriesRequest.AccountType.
 */
export const AppendLedgerEntriesRequest_AccountTypeSchema: GenEnum<AppendLedgerEntriesRequest_AccountType> = /*@__PURE__*/
  enumDesc(file_tzero_v1_payment_provider, 0, 0);

/**
 * @generated from message tzero.v1.payment.AppendLedgerEntriesResponse
 */
export type AppendLedgerEntriesResponse = Message<"tzero.v1.payment.AppendLedgerEntriesResponse"> & {
};

/**
 * Describes the message tzero.v1.payment.AppendLedgerEntriesResponse.
 * Use `create(AppendLedgerEntriesResponseSchema)` to create a new message.
 */
export const AppendLedgerEntriesResponseSchema: GenMessage<AppendLedgerEntriesResponse> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 1);

/**
 * @generated from message tzero.v1.payment.PayoutRequest
 */
export type PayoutRequest = Message<"tzero.v1.payment.PayoutRequest"> & {
  /**
   * *
   * payment id assigned by the network (provider should store this id to provide details in UpdatePayout later)
   *
   * @generated from field: int64 payment_id = 10;
   */
  paymentId: bigint;

  /**
   * *
   * payout id assigned by the network (provider should store this id to provide details in UpdatePayout later)
   *
   * @generated from field: int64 payout_id = 20;
   */
  payoutId: bigint;

  /**
   * *
   * currency of the payout (participant could support multiple currencies)
   * This is the currency in which the payout should be made.
   *
   * @generated from field: string currency = 30;
   */
  currency: string;

  /**
   * *
   * client quote id of the quote used for this payout (the provider provides the quote IDs in the UpdateQuote rpc)
   * This is the identifier of the quote that was used to calculate the payout amount.
   *
   * @generated from field: string client_quote_id = 40;
   */
  clientQuoteId: string;

  /**
   * *
   * amount in currency of the payout
   * This is the amount that should be paid out to the recipient.
   *
   * *
   * payout_method is the payment method for the payout, e.g. bank transfer, crypto transfer, etc.
   * This is used to specify how the payout should be made.
   *
   * @generated from field: tzero.v1.common.Decimal amount = 50;
   */
  amount?: Decimal;

  /**
   * @generated from field: optional tzero.v1.common.PaymentMethod payout_method = 60;
   */
  payoutMethod?: PaymentMethod;

  /**
   * *
   * optional reference for the payment, up to 140 characters
   *
   * @generated from field: optional string reference = 70;
   */
  reference?: string;

  /**
   * *
   * Pay-in provider id which initiated the pay out.
   *
   * @generated from field: uint32 pay_in_provider_id = 80;
   */
  payInProviderId: number;
};

/**
 * Describes the message tzero.v1.payment.PayoutRequest.
 * Use `create(PayoutRequestSchema)` to create a new message.
 */
export const PayoutRequestSchema: GenMessage<PayoutRequest> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 2);

/**
 * @generated from message tzero.v1.payment.PayoutResponse
 */
export type PayoutResponse = Message<"tzero.v1.payment.PayoutResponse"> & {
};

/**
 * Describes the message tzero.v1.payment.PayoutResponse.
 * Use `create(PayoutResponseSchema)` to create a new message.
 */
export const PayoutResponseSchema: GenMessage<PayoutResponse> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 3);

/**
 * @generated from message tzero.v1.payment.UpdatePaymentRequest
 */
export type UpdatePaymentRequest = Message<"tzero.v1.payment.UpdatePaymentRequest"> & {
  /**
   * *
   * payment_id is a payment id in the T-0 network.
   *
   * @generated from field: uint64 payment_id = 5;
   */
  paymentId: bigint;

  /**
   * *
   * payment_client_id is a payment id assigned by the client, this is the same id that was provided in the CreatePaymentRequest.
   *
   * @generated from field: string payment_client_id = 10;
   */
  paymentClientId: string;

  /**
   * @generated from oneof tzero.v1.payment.UpdatePaymentRequest.result
   */
  result: {
    /**
     * *
     * Success response - means the payout was executed successfully and the payment is now complete. This happens when
     * the payout is successfully processed by the payout provider, and the payment was made to the recipient.
     *
     * @generated from field: tzero.v1.payment.UpdatePaymentRequest.Success success = 20;
     */
    value: UpdatePaymentRequest_Success;
    case: "success";
  } | {
    /**
     * *
     * Failure response - means the payout was not executed successfully, e.g. the payout provider could not process the payout.
     *
     * @generated from field: tzero.v1.payment.UpdatePaymentRequest.Failure failure = 30;
     */
    value: UpdatePaymentRequest_Failure;
    case: "failure";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tzero.v1.payment.UpdatePaymentRequest.
 * Use `create(UpdatePaymentRequestSchema)` to create a new message.
 */
export const UpdatePaymentRequestSchema: GenMessage<UpdatePaymentRequest> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 4);

/**
 * @generated from message tzero.v1.payment.UpdatePaymentRequest.Success
 */
export type UpdatePaymentRequest_Success = Message<"tzero.v1.payment.UpdatePaymentRequest.Success"> & {
  /**
   * amount in currency of the payout
   *
   * @generated from field: tzero.v1.common.Decimal payout_amount = 10;
   */
  payoutAmount?: Decimal;

  /**
   * time of the payout
   *
   * @generated from field: google.protobuf.Timestamp paid_out_at = 50;
   */
  paidOutAt?: Timestamp;
};

/**
 * Describes the message tzero.v1.payment.UpdatePaymentRequest.Success.
 * Use `create(UpdatePaymentRequest_SuccessSchema)` to create a new message.
 */
export const UpdatePaymentRequest_SuccessSchema: GenMessage<UpdatePaymentRequest_Success> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 4, 0);

/**
 * @generated from message tzero.v1.payment.UpdatePaymentRequest.Failure
 */
export type UpdatePaymentRequest_Failure = Message<"tzero.v1.payment.UpdatePaymentRequest.Failure"> & {
};

/**
 * Describes the message tzero.v1.payment.UpdatePaymentRequest.Failure.
 * Use `create(UpdatePaymentRequest_FailureSchema)` to create a new message.
 */
export const UpdatePaymentRequest_FailureSchema: GenMessage<UpdatePaymentRequest_Failure> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 4, 1);

/**
 * @generated from enum tzero.v1.payment.UpdatePaymentRequest.Failure.Reason
 */
export enum UpdatePaymentRequest_Failure_Reason {
  /**
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,
}

/**
 * Describes the enum tzero.v1.payment.UpdatePaymentRequest.Failure.Reason.
 */
export const UpdatePaymentRequest_Failure_ReasonSchema: GenEnum<UpdatePaymentRequest_Failure_Reason> = /*@__PURE__*/
  enumDesc(file_tzero_v1_payment_provider, 4, 1, 0);

/**
 * @generated from message tzero.v1.payment.UpdatePaymentResponse
 */
export type UpdatePaymentResponse = Message<"tzero.v1.payment.UpdatePaymentResponse"> & {
};

/**
 * Describes the message tzero.v1.payment.UpdatePaymentResponse.
 * Use `create(UpdatePaymentResponseSchema)` to create a new message.
 */
export const UpdatePaymentResponseSchema: GenMessage<UpdatePaymentResponse> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 5);

/**
 * All the amounts are in USD 
 *
 * @generated from message tzero.v1.payment.UpdateLimitRequest
 */
export type UpdateLimitRequest = Message<"tzero.v1.payment.UpdateLimitRequest"> & {
  /**
   * *
   * can contain one or more Limit messages, each representing a credit limit for a specific counterparty provider.
   *
   * @generated from field: repeated tzero.v1.payment.UpdateLimitRequest.Limit limits = 10;
   */
  limits: UpdateLimitRequest_Limit[];
};

/**
 * Describes the message tzero.v1.payment.UpdateLimitRequest.
 * Use `create(UpdateLimitRequestSchema)` to create a new message.
 */
export const UpdateLimitRequestSchema: GenMessage<UpdateLimitRequest> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 6);

/**
 * @generated from message tzero.v1.payment.UpdateLimitRequest.Limit
 */
export type UpdateLimitRequest_Limit = Message<"tzero.v1.payment.UpdateLimitRequest.Limit"> & {
  /**
   * *
   * Incrementally growing for the provider - same as in Ledger.
   *
   * @generated from field: int64 version = 10;
   */
  version: bigint;

  /**
   * *
   * the Id of the counterparty (creditor) provider, e.g. the provider that is providing the credit limit.
   * It's usually the payOut provider, which provides the credit line to the payIn provider.
   *
   * @generated from field: int32 creditor_id = 15;
   */
  creditorId: number;

  /**
   * *
   * payout_limit = credit_limit - credit_usage, negative value means credit limit is exceeded,
   * e.g. if counterparty decreased credit limit
   *
   * @generated from field: tzero.v1.common.Decimal payout_limit = 20;
   */
  payoutLimit?: Decimal;

  /**
   * *
   * This is the credit limit that the counterparty is willing to extend to the provider.
   *
   * @generated from field: tzero.v1.common.Decimal credit_limit = 30;
   */
  creditLimit?: Decimal;

  /**
   * *
   * This is the credit usage that the provider has used so far. It is the sum of all payouts made by the provider
   * minus the settlement net (settlement balance). It could be negative if the provider has received more
   * in settlements than maid payouts (pre-settlement).
   *
   * @generated from field: tzero.v1.common.Decimal credit_usage = 40;
   */
  creditUsage?: Decimal;
};

/**
 * Describes the message tzero.v1.payment.UpdateLimitRequest.Limit.
 * Use `create(UpdateLimitRequest_LimitSchema)` to create a new message.
 */
export const UpdateLimitRequest_LimitSchema: GenMessage<UpdateLimitRequest_Limit> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 6, 0);

/**
 * *
 * Empty message - means no response is needed.
 *
 * @generated from message tzero.v1.payment.UpdateLimitResponse
 */
export type UpdateLimitResponse = Message<"tzero.v1.payment.UpdateLimitResponse"> & {
};

/**
 * Describes the message tzero.v1.payment.UpdateLimitResponse.
 * Use `create(UpdateLimitResponseSchema)` to create a new message.
 */
export const UpdateLimitResponseSchema: GenMessage<UpdateLimitResponse> = /*@__PURE__*/
  messageDesc(file_tzero_v1_payment_provider, 7);

/**
 * *
 * This service must be implemented by the provider.
 *
 * All methods of this service must be idempotent, meaning they are safe to retry and multiple calls with the same parameters must not have additional effect.
 *
 * @generated from service tzero.v1.payment.ProviderService
 */
export const ProviderService: GenService<{
  /**
   * *
   * Network instructs the provider to execute a payout to the recipient.
   * This method should be idempotent, meaning that multiple calls with the same parameters will have no additional effect.
   *
   * @generated from rpc tzero.v1.payment.ProviderService.PayOut
   */
  payOut: {
    methodKind: "unary";
    input: typeof PayoutRequestSchema;
    output: typeof PayoutResponseSchema;
  },
  /**
   * *
   * Network provides an update on the status of a payment. This can be either a success or a failure.
   * This method should be idempotent, meaning that multiple calls with the same parameters will have no additional effect.
   *
   * @generated from rpc tzero.v1.payment.ProviderService.UpdatePayment
   */
  updatePayment: {
    methodKind: "unary";
    input: typeof UpdatePaymentRequestSchema;
    output: typeof UpdatePaymentResponseSchema;
  },
  /**
   * *
   * This rpc is used to notify the provider about the changes in credit limit and/or credit usage.
   *
   * @generated from rpc tzero.v1.payment.ProviderService.UpdateLimit
   */
  updateLimit: {
    methodKind: "unary";
    input: typeof UpdateLimitRequestSchema;
    output: typeof UpdateLimitResponseSchema;
  },
  /**
   * *
   * Network can send all the updates about ledger entries of the provider's accounts. It can be used to
   * keep track of the provider's exposure to other participants and other important financial events. (see the list in the message below)
   *
   * @generated from rpc tzero.v1.payment.ProviderService.AppendLedgerEntries
   */
  appendLedgerEntries: {
    methodKind: "unary";
    input: typeof AppendLedgerEntriesRequestSchema;
    output: typeof AppendLedgerEntriesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_tzero_v1_payment_provider, 0);

