// @generated by protoc-gen-es v2.6.0 with parameter "target=ts"
// @generated from file network/network.proto (package tzero.v1.network, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Decimal } from "../common/common_pb";
import { file_common_common } from "../common/common_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file network/network.proto.
 */
export const file_network_network: GenFile = /*@__PURE__*/
  fileDesc("ChVuZXR3b3JrL25ldHdvcmsucHJvdG8SEHR6ZXJvLnYxLm5ldHdvcmsi8AMKElVwZGF0ZVF1b3RlUmVxdWVzdBI7CgdwYXlfb3V0GAogAygLMioudHplcm8udjEubmV0d29yay5VcGRhdGVRdW90ZVJlcXVlc3QuUXVvdGUSOgoGcGF5X2luGBQgAygLMioudHplcm8udjEubmV0d29yay5VcGRhdGVRdW90ZVJlcXVlc3QuUXVvdGUa4AIKBVF1b3RlEhAKCGN1cnJlbmN5GAogASgJEi8KCnF1b3RlX3R5cGUYFCABKA4yGy50emVyby52MS5uZXR3b3JrLlF1b3RlVHlwZRI+CgViYW5kcxgeIAMoCzIvLnR6ZXJvLnYxLm5ldHdvcmsuVXBkYXRlUXVvdGVSZXF1ZXN0LlF1b3RlLkJhbmQSLgoKZXhwaXJhdGlvbhg8IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLQoJdGltZXN0YW1wGEYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBp1CgRCYW5kEhcKD2NsaWVudF9xdW90ZV9pZBgKIAEoCRIsCgptYXhfYW1vdW50GCggASgLMhgudHplcm8udjEuY29tbW9uLkRlY2ltYWwSJgoEcmF0ZRgyIAEoCzIYLnR6ZXJvLnYxLmNvbW1vbi5EZWNpbWFsIhUKE1VwZGF0ZVF1b3RlUmVzcG9uc2UiiwEKFUdldFBheW91dFF1b3RlUmVxdWVzdBIXCg9wYXlvdXRfY3VycmVuY3kYCiABKAkSKAoGYW1vdW50GBQgASgLMhgudHplcm8udjEuY29tbW9uLkRlY2ltYWwSLwoKcXVvdGVfdHlwZRgeIAEoDjIbLnR6ZXJvLnYxLm5ldHdvcmsuUXVvdGVUeXBlIp0BChZHZXRQYXlvdXRRdW90ZVJlc3BvbnNlEiYKBHJhdGUYCiABKAsyGC50emVyby52MS5jb21tb24uRGVjaW1hbBIuCgpleHBpcmF0aW9uGBQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIrCghxdW90ZV9pZBgeIAEoCzIZLnR6ZXJvLnYxLm5ldHdvcmsuUXVvdGVJZCK1BQoUQ3JlYXRlUGF5bWVudFJlcXVlc3QSGQoRcGF5bWVudF9jbGllbnRfaWQYCiABKAkSFwoPcGF5b3V0X2N1cnJlbmN5GBQgASgJEigKBmFtb3VudBgeIAEoCzIYLnR6ZXJvLnYxLmNvbW1vbi5EZWNpbWFsEhsKDnBheWluX2N1cnJlbmN5GCggASgJSACIAQESPQoGc2VuZGVyGDIgASgLMi0udHplcm8udjEubmV0d29yay5DcmVhdGVQYXltZW50UmVxdWVzdC5TZW5kZXISQwoJcmVjaXBpZW50GDwgASgLMjAudHplcm8udjEubmV0d29yay5DcmVhdGVQYXltZW50UmVxdWVzdC5SZWNpcGllbnQSFgoJcmVmZXJlbmNlGEYgASgJSAGIAQESMAoIcXVvdGVfaWQYZCABKAsyGS50emVyby52MS5uZXR3b3JrLlF1b3RlSWRIAogBARpiCgZTZW5kZXISTgoOcHJpdmF0ZV9wZXJzb24YCiABKAsyNC50emVyby52MS5uZXR3b3JrLkNyZWF0ZVBheW1lbnRSZXF1ZXN0LlByaXZhdGVQZXJzb25IAEIICgZzZW5kZXIaaAoJUmVjaXBpZW50Ek4KDnByaXZhdGVfcGVyc29uGAogASgLMjQudHplcm8udjEubmV0d29yay5DcmVhdGVQYXltZW50UmVxdWVzdC5Qcml2YXRlUGVyc29uSABCCwoJcmVjaXBpZW50GlgKDVByaXZhdGVQZXJzb24SIAoYcHJpdmF0ZV9wZXJzb25fY2xpZW50X2lkGAogASgJEhIKCmZpcnN0X25hbWUYFCABKAkSEQoJbGFzdF9uYW1lGB4gASgJQhEKD19wYXlpbl9jdXJyZW5jeUIMCgpfcmVmZXJlbmNlQgsKCV9xdW90ZV9pZCIwCgdRdW90ZUlkEhAKCHF1b3RlX2lkGB4gASgDEhMKC3Byb3ZpZGVyX2lkGCggASgFIpACChVDcmVhdGVQYXltZW50UmVzcG9uc2USGQoRcGF5bWVudF9jbGllbnRfaWQYCiABKAkSQgoHc3VjY2VzcxgUIAEoCzIvLnR6ZXJvLnYxLm5ldHdvcmsuQ3JlYXRlUGF5bWVudFJlc3BvbnNlLlN1Y2Nlc3NIABJCCgdmYWlsdXJlGB4gASgLMi8udHplcm8udjEubmV0d29yay5DcmVhdGVQYXltZW50UmVzcG9uc2UuRmFpbHVyZUgAGh0KB1N1Y2Nlc3MSEgoKcGF5bWVudF9pZBgKIAEoAxorCgdGYWlsdXJlIiAKBlJlYXNvbhIWChJSRUFTT05fVU5TUEVDSUZJRUQQAEIICgZyZXN1bHQi4AEKE1VwZGF0ZVBheW91dFJlcXVlc3QSEgoKcGF5bWVudF9pZBgKIAEoAxIRCglwYXlvdXRfaWQYFCABKAMSQAoHc3VjY2VzcxgeIAEoCzItLnR6ZXJvLnYxLm5ldHdvcmsuVXBkYXRlUGF5b3V0UmVxdWVzdC5TdWNjZXNzSAASQAoHZmFpbHVyZRgoIAEoCzItLnR6ZXJvLnYxLm5ldHdvcmsuVXBkYXRlUGF5b3V0UmVxdWVzdC5GYWlsdXJlSAAaCQoHU3VjY2VzcxoJCgdGYWlsdXJlQggKBnJlc3VsdCIWChRVcGRhdGVQYXlvdXRSZXNwb25zZSIzChFHZXRLeWNEYXRhUmVxdWVzdBITCglwZXJzb25faWQYCiABKAlIAEIJCgdhY2NvdW50IjwKEkdldEt5Y0RhdGFSZXNwb25zZRIaChBzdW1zdWJfa3ljX3Rva2VuGAogASgJSABCCgoIa3ljX2RhdGEiUgoSQ3JlYXRlUGF5SW5SZXF1ZXN0EhIKCnBheW1lbnRfaWQYCiABKAkSKAoGYW1vdW50GBQgASgLMhgudHplcm8udjEuY29tbW9uLkRlY2ltYWwiFQoTQ3JlYXRlUGF5SW5SZXNwb25zZSpACglRdW90ZVR5cGUSGgoWUVVPVEVfVFlQRV9VTlNQRUNJRklFRBAAEhcKE1FVT1RFX1RZUEVfUkVBTFRJTUUQATLlBAoOTmV0d29ya1NlcnZpY2USXwoLVXBkYXRlUXVvdGUSJC50emVyby52MS5uZXR3b3JrLlVwZGF0ZVF1b3RlUmVxdWVzdBolLnR6ZXJvLnYxLm5ldHdvcmsuVXBkYXRlUXVvdGVSZXNwb25zZSIDkAICEmgKDkdldFBheW91dFF1b3RlEicudHplcm8udjEubmV0d29yay5HZXRQYXlvdXRRdW90ZVJlcXVlc3QaKC50emVyby52MS5uZXR3b3JrLkdldFBheW91dFF1b3RlUmVzcG9uc2UiA5ACARJlCg1DcmVhdGVQYXltZW50EiYudHplcm8udjEubmV0d29yay5DcmVhdGVQYXltZW50UmVxdWVzdBonLnR6ZXJvLnYxLm5ldHdvcmsuQ3JlYXRlUGF5bWVudFJlc3BvbnNlIgOQAgISYgoMVXBkYXRlUGF5b3V0EiUudHplcm8udjEubmV0d29yay5VcGRhdGVQYXlvdXRSZXF1ZXN0GiYudHplcm8udjEubmV0d29yay5VcGRhdGVQYXlvdXRSZXNwb25zZSIDkAICEl8KC0NyZWF0ZVBheUluEiQudHplcm8udjEubmV0d29yay5DcmVhdGVQYXlJblJlcXVlc3QaJS50emVyby52MS5uZXR3b3JrLkNyZWF0ZVBheUluUmVzcG9uc2UiA5ACAhJcCgpHZXRLeWNEYXRhEiMudHplcm8udjEubmV0d29yay5HZXRLeWNEYXRhUmVxdWVzdBokLnR6ZXJvLnYxLm5ldHdvcmsuR2V0S3ljRGF0YVJlc3BvbnNlIgOQAgJChgEKFGNvbS50emVyby52MS5uZXR3b3JrQgxOZXR3b3JrUHJvdG9QAaICA1RWTqoCEFR6ZXJvLlYxLk5ldHdvcmvKAhBUemVyb1xWMVxOZXR3b3Jr4gIcVHplcm9cVjFcTmV0d29ya1xHUEJNZXRhZGF0YeoCElR6ZXJvOjpWMTo6TmV0d29ya2IGcHJvdG8z", [file_common_common, file_google_protobuf_timestamp]);

/**
 *
 * Base currency is always USD, so the quotes are always in USD/currency format.
 *
 * @generated from message tzero.v1.network.UpdateQuoteRequest
 */
export type UpdateQuoteRequest = Message<"tzero.v1.network.UpdateQuoteRequest"> & {
  /**
   * *
   * Zero or more quotes for pay-out operations, each quote must have a unique currency, and one or more bands, with the
   * unique client_quote_id for each band.
   *
   * @generated from field: repeated tzero.v1.network.UpdateQuoteRequest.Quote pay_out = 10;
   */
  payOut: UpdateQuoteRequest_Quote[];

  /**
   * *
   * Zero or more quotes for pay-in operations, each quote must have a unique currency, and one or more bands, with the
   * unique client_quote_id for each band.
   *
   * @generated from field: repeated tzero.v1.network.UpdateQuoteRequest.Quote pay_in = 20;
   */
  payIn: UpdateQuoteRequest_Quote[];
};

/**
 * Describes the message tzero.v1.network.UpdateQuoteRequest.
 * Use `create(UpdateQuoteRequestSchema)` to create a new message.
 */
export const UpdateQuoteRequestSchema: GenMessage<UpdateQuoteRequest> = /*@__PURE__*/
  messageDesc(file_network_network, 0);

/**
 * @generated from message tzero.v1.network.UpdateQuoteRequest.Quote
 */
export type UpdateQuoteRequest_Quote = Message<"tzero.v1.network.UpdateQuoteRequest.Quote"> & {
  /**
   * BRL, EUR, GBP, etc. (ISO 4217 currency code)
   *
   * @generated from field: string currency = 10;
   */
  currency: string;

  /**
   * type of the quote, e.g. real-time or guaranteed
   *
   * @generated from field: tzero.v1.network.QuoteType quote_type = 20;
   */
  quoteType: QuoteType;

  /**
   * list of bands for this quote
   *
   * @generated from field: repeated tzero.v1.network.UpdateQuoteRequest.Quote.Band bands = 30;
   */
  bands: UpdateQuoteRequest_Quote_Band[];

  /**
   * expiration time of the quote
   *
   * @generated from field: google.protobuf.Timestamp expiration = 60;
   */
  expiration?: Timestamp;

  /**
   * timestamp quote was created
   *
   * @generated from field: google.protobuf.Timestamp timestamp = 70;
   */
  timestamp?: Timestamp;
};

/**
 * Describes the message tzero.v1.network.UpdateQuoteRequest.Quote.
 * Use `create(UpdateQuoteRequest_QuoteSchema)` to create a new message.
 */
export const UpdateQuoteRequest_QuoteSchema: GenMessage<UpdateQuoteRequest_Quote> = /*@__PURE__*/
  messageDesc(file_network_network, 0, 0);

/**
 * @generated from message tzero.v1.network.UpdateQuoteRequest.Quote.Band
 */
export type UpdateQuoteRequest_Quote_Band = Message<"tzero.v1.network.UpdateQuoteRequest.Quote.Band"> & {
  /**
   * unique client generated id for this band
   *
   * @generated from field: string client_quote_id = 10;
   */
  clientQuoteId: string;

  /**
   * max amount of USD this quote is applicable for. Please look into documentation for valid amounts.
   *
   * @generated from field: tzero.v1.common.Decimal max_amount = 40;
   */
  maxAmount?: Decimal;

  /**
   * USD/currency rate
   *
   * @generated from field: tzero.v1.common.Decimal rate = 50;
   */
  rate?: Decimal;
};

/**
 * Describes the message tzero.v1.network.UpdateQuoteRequest.Quote.Band.
 * Use `create(UpdateQuoteRequest_Quote_BandSchema)` to create a new message.
 */
export const UpdateQuoteRequest_Quote_BandSchema: GenMessage<UpdateQuoteRequest_Quote_Band> = /*@__PURE__*/
  messageDesc(file_network_network, 0, 0, 0);

/**
 * @generated from message tzero.v1.network.UpdateQuoteResponse
 */
export type UpdateQuoteResponse = Message<"tzero.v1.network.UpdateQuoteResponse"> & {
};

/**
 * Describes the message tzero.v1.network.UpdateQuoteResponse.
 * Use `create(UpdateQuoteResponseSchema)` to create a new message.
 */
export const UpdateQuoteResponseSchema: GenMessage<UpdateQuoteResponse> = /*@__PURE__*/
  messageDesc(file_network_network, 1);

/**
 * @generated from message tzero.v1.network.GetPayoutQuoteRequest
 */
export type GetPayoutQuoteRequest = Message<"tzero.v1.network.GetPayoutQuoteRequest"> & {
  /**
   * ISO 4217 currency code, e.g. EUR, GBP, etc. in which the payout should be made
   *
   * @generated from field: string payout_currency = 10;
   */
  payoutCurrency: string;

  /**
   * amount in quote currency, only USD is supported
   *
   * @generated from field: tzero.v1.common.Decimal amount = 20;
   */
  amount?: Decimal;

  /**
   * type of the quote, e.g. real-time or guaranteed
   *
   * @generated from field: tzero.v1.network.QuoteType quote_type = 30;
   */
  quoteType: QuoteType;
};

/**
 * Describes the message tzero.v1.network.GetPayoutQuoteRequest.
 * Use `create(GetPayoutQuoteRequestSchema)` to create a new message.
 */
export const GetPayoutQuoteRequestSchema: GenMessage<GetPayoutQuoteRequest> = /*@__PURE__*/
  messageDesc(file_network_network, 2);

/**
 * @generated from message tzero.v1.network.GetPayoutQuoteResponse
 */
export type GetPayoutQuoteResponse = Message<"tzero.v1.network.GetPayoutQuoteResponse"> & {
  /**
   * rate in USD/currency, e.g. 1.2345 for 1 USD = 1.2345 EUR
   *
   * @generated from field: tzero.v1.common.Decimal rate = 10;
   */
  rate?: Decimal;

  /**
   * expiration time of the quote
   *
   * @generated from field: google.protobuf.Timestamp expiration = 20;
   */
  expiration?: Timestamp;

  /**
   * @generated from field: tzero.v1.network.QuoteId quote_id = 30;
   */
  quoteId?: QuoteId;
};

/**
 * Describes the message tzero.v1.network.GetPayoutQuoteResponse.
 * Use `create(GetPayoutQuoteResponseSchema)` to create a new message.
 */
export const GetPayoutQuoteResponseSchema: GenMessage<GetPayoutQuoteResponse> = /*@__PURE__*/
  messageDesc(file_network_network, 3);

/**
 * @generated from message tzero.v1.network.CreatePaymentRequest
 */
export type CreatePaymentRequest = Message<"tzero.v1.network.CreatePaymentRequest"> & {
  /**
   * unique client generated id for this payment
   *
   * @generated from field: string payment_client_id = 10;
   */
  paymentClientId: string;

  /**
   * ISO 4217 currency code, e.g. EUR, GBP, etc. in which the payout should be made
   *
   * @generated from field: string payout_currency = 20;
   */
  payoutCurrency: string;

  /**
   * amount in the payin currency, by default USD (if the payIn currency is not specified)
   *
   * @generated from field: tzero.v1.common.Decimal amount = 30;
   */
  amount?: Decimal;

  /**
   * if not specified, USD is used for calculations
   *
   * @generated from field: optional string payin_currency = 40;
   */
  payinCurrency?: string;

  /**
   * @generated from field: tzero.v1.network.CreatePaymentRequest.Sender sender = 50;
   */
  sender?: CreatePaymentRequest_Sender;

  /**
   * @generated from field: tzero.v1.network.CreatePaymentRequest.Recipient recipient = 60;
   */
  recipient?: CreatePaymentRequest_Recipient;

  /**
   * optional reference for the payment, up to 140 characters
   *
   * @generated from field: optional string reference = 70;
   */
  reference?: string;

  /**
   * if specified, must be a valid quoteId that was previously returned by the GetPayoutQuote method
   *
   * @generated from field: optional tzero.v1.network.QuoteId quote_id = 100;
   */
  quoteId?: QuoteId;
};

/**
 * Describes the message tzero.v1.network.CreatePaymentRequest.
 * Use `create(CreatePaymentRequestSchema)` to create a new message.
 */
export const CreatePaymentRequestSchema: GenMessage<CreatePaymentRequest> = /*@__PURE__*/
  messageDesc(file_network_network, 4);

/**
 * Work in progress
 *
 * @generated from message tzero.v1.network.CreatePaymentRequest.Sender
 */
export type CreatePaymentRequest_Sender = Message<"tzero.v1.network.CreatePaymentRequest.Sender"> & {
  /**
   * @generated from oneof tzero.v1.network.CreatePaymentRequest.Sender.sender
   */
  sender: {
    /**
     * @generated from field: tzero.v1.network.CreatePaymentRequest.PrivatePerson private_person = 10;
     */
    value: CreatePaymentRequest_PrivatePerson;
    case: "privatePerson";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tzero.v1.network.CreatePaymentRequest.Sender.
 * Use `create(CreatePaymentRequest_SenderSchema)` to create a new message.
 */
export const CreatePaymentRequest_SenderSchema: GenMessage<CreatePaymentRequest_Sender> = /*@__PURE__*/
  messageDesc(file_network_network, 4, 0);

/**
 * Work in progress
 *
 * @generated from message tzero.v1.network.CreatePaymentRequest.Recipient
 */
export type CreatePaymentRequest_Recipient = Message<"tzero.v1.network.CreatePaymentRequest.Recipient"> & {
  /**
   * @generated from oneof tzero.v1.network.CreatePaymentRequest.Recipient.recipient
   */
  recipient: {
    /**
     * @generated from field: tzero.v1.network.CreatePaymentRequest.PrivatePerson private_person = 10;
     */
    value: CreatePaymentRequest_PrivatePerson;
    case: "privatePerson";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tzero.v1.network.CreatePaymentRequest.Recipient.
 * Use `create(CreatePaymentRequest_RecipientSchema)` to create a new message.
 */
export const CreatePaymentRequest_RecipientSchema: GenMessage<CreatePaymentRequest_Recipient> = /*@__PURE__*/
  messageDesc(file_network_network, 4, 1);

/**
 * Work in progress
 *
 * @generated from message tzero.v1.network.CreatePaymentRequest.PrivatePerson
 */
export type CreatePaymentRequest_PrivatePerson = Message<"tzero.v1.network.CreatePaymentRequest.PrivatePerson"> & {
  /**
   * @generated from field: string private_person_client_id = 10;
   */
  privatePersonClientId: string;

  /**
   * @generated from field: string first_name = 20;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 30;
   */
  lastName: string;
};

/**
 * Describes the message tzero.v1.network.CreatePaymentRequest.PrivatePerson.
 * Use `create(CreatePaymentRequest_PrivatePersonSchema)` to create a new message.
 */
export const CreatePaymentRequest_PrivatePersonSchema: GenMessage<CreatePaymentRequest_PrivatePerson> = /*@__PURE__*/
  messageDesc(file_network_network, 4, 2);

/**
 * @generated from message tzero.v1.network.QuoteId
 */
export type QuoteId = Message<"tzero.v1.network.QuoteId"> & {
  /**
   * unique identifier of the quote within the specified provider
   *
   * @generated from field: int64 quote_id = 30;
   */
  quoteId: bigint;

  /**
   * provider id of the quote
   *
   * @generated from field: int32 provider_id = 40;
   */
  providerId: number;
};

/**
 * Describes the message tzero.v1.network.QuoteId.
 * Use `create(QuoteIdSchema)` to create a new message.
 */
export const QuoteIdSchema: GenMessage<QuoteId> = /*@__PURE__*/
  messageDesc(file_network_network, 5);

/**
 * @generated from message tzero.v1.network.CreatePaymentResponse
 */
export type CreatePaymentResponse = Message<"tzero.v1.network.CreatePaymentResponse"> & {
  /**
   * client generated id supplied in the request
   *
   * @generated from field: string payment_client_id = 10;
   */
  paymentClientId: string;

  /**
   * @generated from oneof tzero.v1.network.CreatePaymentResponse.result
   */
  result: {
    /**
     * *
     * Success response - means the payment was accepted, but the payout is not yet completed. This means, the network found
     * a suitable quote for the payout currency and amount, and instructed the payout provider to process the payout.
     *
     * @generated from field: tzero.v1.network.CreatePaymentResponse.Success success = 20;
     */
    value: CreatePaymentResponse_Success;
    case: "success";
  } | {
    /**
     * *
     * Failure response - means the payment was not accepted, e.g. the network could not find a suitable quote for the
     * payout currency and amount, or the credit limit is exceeded for the available quotes.
     *
     * @generated from field: tzero.v1.network.CreatePaymentResponse.Failure failure = 30;
     */
    value: CreatePaymentResponse_Failure;
    case: "failure";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tzero.v1.network.CreatePaymentResponse.
 * Use `create(CreatePaymentResponseSchema)` to create a new message.
 */
export const CreatePaymentResponseSchema: GenMessage<CreatePaymentResponse> = /*@__PURE__*/
  messageDesc(file_network_network, 6);

/**
 * @generated from message tzero.v1.network.CreatePaymentResponse.Success
 */
export type CreatePaymentResponse_Success = Message<"tzero.v1.network.CreatePaymentResponse.Success"> & {
  /**
   * payment id assigned by the network
   *
   * @generated from field: int64 payment_id = 10;
   */
  paymentId: bigint;
};

/**
 * Describes the message tzero.v1.network.CreatePaymentResponse.Success.
 * Use `create(CreatePaymentResponse_SuccessSchema)` to create a new message.
 */
export const CreatePaymentResponse_SuccessSchema: GenMessage<CreatePaymentResponse_Success> = /*@__PURE__*/
  messageDesc(file_network_network, 6, 0);

/**
 * @generated from message tzero.v1.network.CreatePaymentResponse.Failure
 */
export type CreatePaymentResponse_Failure = Message<"tzero.v1.network.CreatePaymentResponse.Failure"> & {
};

/**
 * Describes the message tzero.v1.network.CreatePaymentResponse.Failure.
 * Use `create(CreatePaymentResponse_FailureSchema)` to create a new message.
 */
export const CreatePaymentResponse_FailureSchema: GenMessage<CreatePaymentResponse_Failure> = /*@__PURE__*/
  messageDesc(file_network_network, 6, 1);

/**
 * @generated from enum tzero.v1.network.CreatePaymentResponse.Failure.Reason
 */
export enum CreatePaymentResponse_Failure_Reason {
  /**
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,
}

/**
 * Describes the enum tzero.v1.network.CreatePaymentResponse.Failure.Reason.
 */
export const CreatePaymentResponse_Failure_ReasonSchema: GenEnum<CreatePaymentResponse_Failure_Reason> = /*@__PURE__*/
  enumDesc(file_network_network, 6, 1, 0);

/**
 * @generated from message tzero.v1.network.UpdatePayoutRequest
 */
export type UpdatePayoutRequest = Message<"tzero.v1.network.UpdatePayoutRequest"> & {
  /**
   * payment id assigned by the network, this is the same payment id that was provided in the PayoutRequest
   *
   * @generated from field: int64 payment_id = 10;
   */
  paymentId: bigint;

  /**
   * payout id assigned by the payout provider, this is the same payout id that was provided in the PayoutRequest
   *
   * @generated from field: int64 payout_id = 20;
   */
  payoutId: bigint;

  /**
   * @generated from oneof tzero.v1.network.UpdatePayoutRequest.result
   */
  result: {
    /**
     * success response with the details of the payout
     *
     * @generated from field: tzero.v1.network.UpdatePayoutRequest.Success success = 30;
     */
    value: UpdatePayoutRequest_Success;
    case: "success";
  } | {
    /**
     * failure response with the reason of the failure
     *
     * @generated from field: tzero.v1.network.UpdatePayoutRequest.Failure failure = 40;
     */
    value: UpdatePayoutRequest_Failure;
    case: "failure";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tzero.v1.network.UpdatePayoutRequest.
 * Use `create(UpdatePayoutRequestSchema)` to create a new message.
 */
export const UpdatePayoutRequestSchema: GenMessage<UpdatePayoutRequest> = /*@__PURE__*/
  messageDesc(file_network_network, 7);

/**
 * @generated from message tzero.v1.network.UpdatePayoutRequest.Success
 */
export type UpdatePayoutRequest_Success = Message<"tzero.v1.network.UpdatePayoutRequest.Success"> & {
};

/**
 * Describes the message tzero.v1.network.UpdatePayoutRequest.Success.
 * Use `create(UpdatePayoutRequest_SuccessSchema)` to create a new message.
 */
export const UpdatePayoutRequest_SuccessSchema: GenMessage<UpdatePayoutRequest_Success> = /*@__PURE__*/
  messageDesc(file_network_network, 7, 0);

/**
 * @generated from message tzero.v1.network.UpdatePayoutRequest.Failure
 */
export type UpdatePayoutRequest_Failure = Message<"tzero.v1.network.UpdatePayoutRequest.Failure"> & {
};

/**
 * Describes the message tzero.v1.network.UpdatePayoutRequest.Failure.
 * Use `create(UpdatePayoutRequest_FailureSchema)` to create a new message.
 */
export const UpdatePayoutRequest_FailureSchema: GenMessage<UpdatePayoutRequest_Failure> = /*@__PURE__*/
  messageDesc(file_network_network, 7, 1);

/**
 * @generated from message tzero.v1.network.UpdatePayoutResponse
 */
export type UpdatePayoutResponse = Message<"tzero.v1.network.UpdatePayoutResponse"> & {
};

/**
 * Describes the message tzero.v1.network.UpdatePayoutResponse.
 * Use `create(UpdatePayoutResponseSchema)` to create a new message.
 */
export const UpdatePayoutResponseSchema: GenMessage<UpdatePayoutResponse> = /*@__PURE__*/
  messageDesc(file_network_network, 8);

/**
 * @generated from message tzero.v1.network.GetKycDataRequest
 */
export type GetKycDataRequest = Message<"tzero.v1.network.GetKycDataRequest"> & {
  /**
   * @generated from oneof tzero.v1.network.GetKycDataRequest.account
   */
  account: {
    /**
     * @generated from field: string person_id = 10;
     */
    value: string;
    case: "personId";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tzero.v1.network.GetKycDataRequest.
 * Use `create(GetKycDataRequestSchema)` to create a new message.
 */
export const GetKycDataRequestSchema: GenMessage<GetKycDataRequest> = /*@__PURE__*/
  messageDesc(file_network_network, 9);

/**
 * @generated from message tzero.v1.network.GetKycDataResponse
 */
export type GetKycDataResponse = Message<"tzero.v1.network.GetKycDataResponse"> & {
  /**
   * @generated from oneof tzero.v1.network.GetKycDataResponse.kyc_data
   */
  kycData: {
    /**
     * @generated from field: string sumsub_kyc_token = 10;
     */
    value: string;
    case: "sumsubKycToken";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tzero.v1.network.GetKycDataResponse.
 * Use `create(GetKycDataResponseSchema)` to create a new message.
 */
export const GetKycDataResponseSchema: GenMessage<GetKycDataResponse> = /*@__PURE__*/
  messageDesc(file_network_network, 10);

/**
 * @generated from message tzero.v1.network.CreatePayInRequest
 */
export type CreatePayInRequest = Message<"tzero.v1.network.CreatePayInRequest"> & {
  /**
   * @generated from field: string payment_id = 10;
   */
  paymentId: string;

  /**
   * @generated from field: tzero.v1.common.Decimal amount = 20;
   */
  amount?: Decimal;
};

/**
 * Describes the message tzero.v1.network.CreatePayInRequest.
 * Use `create(CreatePayInRequestSchema)` to create a new message.
 */
export const CreatePayInRequestSchema: GenMessage<CreatePayInRequest> = /*@__PURE__*/
  messageDesc(file_network_network, 11);

/**
 * @generated from message tzero.v1.network.CreatePayInResponse
 */
export type CreatePayInResponse = Message<"tzero.v1.network.CreatePayInResponse"> & {
};

/**
 * Describes the message tzero.v1.network.CreatePayInResponse.
 * Use `create(CreatePayInResponseSchema)` to create a new message.
 */
export const CreatePayInResponseSchema: GenMessage<CreatePayInResponse> = /*@__PURE__*/
  messageDesc(file_network_network, 12);

/**
 * @generated from enum tzero.v1.network.QuoteType
 */
export enum QuoteType {
  /**
   * @generated from enum value: QUOTE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * real-time quote must be valid at least for 30 seconds (TBD)
   *
   * @generated from enum value: QUOTE_TYPE_REALTIME = 1;
   */
  REALTIME = 1,
}

/**
 * Describes the enum tzero.v1.network.QuoteType.
 */
export const QuoteTypeSchema: GenEnum<QuoteType> = /*@__PURE__*/
  enumDesc(file_network_network, 0);

/**
 * *
 * This service is used by provider to interact with the Network, e.g. push quotes and initiate payments.
 *
 * All methods of this service are idempotent, meaning they are safe to retry and multiple calls with the same parameters will have no additional effect.
 *
 * @generated from service tzero.v1.network.NetworkService
 */
export const NetworkService: GenService<{
  /**
   * *
   * Used by the provider to publish pay-in and pay-out quotes (FX rates) into the network.
   * These quotes include tiered pricing bands and an expiration timestamp.
   * This method is idempotent, meaning that multiple calls with the same parameters will have no additional effect.
   *
   * @generated from rpc tzero.v1.network.NetworkService.UpdateQuote
   */
  updateQuote: {
    methodKind: "unary";
    input: typeof UpdateQuoteRequestSchema;
    output: typeof UpdateQuoteResponseSchema;
  },
  /**
   * *
   * Request the best available quote for a payout in a specific currency, for a given amount.
   * If the payout quote exists, but the credit limit is exceeded, this quote will not be considered.
   *
   * @generated from rpc tzero.v1.network.NetworkService.GetPayoutQuote
   */
  getPayoutQuote: {
    methodKind: "unary";
    input: typeof GetPayoutQuoteRequestSchema;
    output: typeof GetPayoutQuoteResponseSchema;
  },
  /**
   * *
   * Submit a request to create a new payment. PayIn currency and QuoteId are the optional parameters.
   * If the payIn currency is not specified, the network will use USD as the default payIn currency, and considering
   * the amount in USD.
   * If specified, it must be a valid currency code - in this case the network will try to find the payIn quote for the
   * specified currency and considering the band from the provider initiated this request. So this is only possible, if
   * this provider already submitted the payIn quote for the specified currency using UpdateQuote rpc.
   * If the quoteID is specified, it must be a valid quoteId that was previously returned by the GetPayoutQuote method.
   * If the quoteId is not specified, the network will try to find a suitable quote for the payout currency and amount,
   * same way as GetPayoutQuote rpc.
   * This method is idempotent, meaning that multiple calls with the same parameters will have no additional effect.
   *
   * @generated from rpc tzero.v1.network.NetworkService.CreatePayment
   */
  createPayment: {
    methodKind: "unary";
    input: typeof CreatePaymentRequestSchema;
    output: typeof CreatePaymentResponseSchema;
  },
  /**
   * *
   * Inform the network that a payout has been completed or failed. This endpoint is called by the payout
   * provider, specifying the payment ID and payout ID, which was provided when the payout request was made to this provider.
   * This method is idempotent, meaning that multiple calls with the same parameters will have no additional effect.
   *
   * @generated from rpc tzero.v1.network.NetworkService.UpdatePayout
   */
  updatePayout: {
    methodKind: "unary";
    input: typeof UpdatePayoutRequestSchema;
    output: typeof UpdatePayoutResponseSchema;
  },
  /**
   * *
   * Inform the network that the provider has received a pay-in from the user.
   * This method is idempotent, meaning that multiple calls with the same parameters will have no additional effect.
   *
   * @generated from rpc tzero.v1.network.NetworkService.CreatePayIn
   */
  createPayIn: {
    methodKind: "unary";
    input: typeof CreatePayInRequestSchema;
    output: typeof CreatePayInResponseSchema;
  },
  /**
   *
   * Retrieve KYC verification data (e.g., SumSub token) for a person involved in the payment.
   *
   *
   * @generated from rpc tzero.v1.network.NetworkService.GetKycData
   */
  getKycData: {
    methodKind: "unary";
    input: typeof GetKycDataRequestSchema;
    output: typeof GetKycDataResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_network_network, 0);

